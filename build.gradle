plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'checkstyle'
	id 'pmd'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
ext {
	hibernateVersion = "6.6.11.Final"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot & Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Database
	runtimeOnly 'org.postgresql:postgresql'

	// Feign & AWS SES
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.1'
	implementation 'software.amazon.awssdk:ses:2.25.17'

	// Keycloak
	implementation 'org.keycloak:keycloak-admin-client:25.0.0'

	// Misc
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Jakarta
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'

	// Hibernate
	implementation "org.hibernate.orm:hibernate-core:${hibernateVersion}"
	implementation "org.hibernate.orm:hibernate-envers:${hibernateVersion}"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.mockito:mockito-core:5.6.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.6.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}
checkstyle {
	toolVersion = '10.3'
	configFile = rootProject.file("config/checkstyle/checkstyle.xml")
}

pmd {
	toolVersion = "6.52.0"
	ruleSets = [
			'java-basic',
			'java-braces',
			'java-empty',
			'java-strings',
			'java-unnecessary'
	]
	//ruleSetFiles = files("config/pmd/pmd-ruleset.xml")
}
sonar {
	properties {
		property "sonar.projectKey", "timesheet-backend"
		property "sonar.projectName", "Timesheet Backend"
		property "sonar.projectVersion", "1.0"
		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.java.binaries", "build/classes"
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "sqp_1d6f011f17dcb8801e26798e15278ec74aefd8d5"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}